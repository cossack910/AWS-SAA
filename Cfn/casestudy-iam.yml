AWSTemplateFormatVersion: "2010-09-09"
Description: "stack casestudy-iam"

Parameters:
  EngineerName1:
    Description: エンジニア1名前
    Type: String

  EngineerName2:
    Description: エンジニア2名前
    Type: String

  OperatorName:
    Description: オペレーター名前
    Type: String

Resources:
  # グループ作成
  ApplicationGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: "Application"

  OperationGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: "Operation"

  # ポリシー作成
  ApplicationPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: Application
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "ec2:*"
              - "elasticloadbalancing:*"
              - "autoscaling-plans:*"
              - "rds:*"
              - "s3:*"
            Resource: "*"
      Groups:
        - !Ref ApplicationGroup
        - !Ref OperationGroup

  OperationPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: Operation
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "cloudwatch:*"
              - "cloudtrail:*"
              - "config:*"
            Resource: "*"
      Groups:
        - !Ref OperationGroup

  # User及び認証情報作成
  Engineer1Password:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        GenerateStringKey: password
        PasswordLength: 16
        SecretStringTemplate: "{}"

  Engineer1:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref EngineerName1
      Path: "/"
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${Engineer1Password}:SecretString:password::}}"
      Groups:
        - !Ref ApplicationGroup

  Engineer2Password:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        GenerateStringKey: password
        PasswordLength: 16
        SecretStringTemplate: "{}"

  Engineer2:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref EngineerName2
      Path: "/"
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${Engineer2Password}:SecretString:password::}}"
      Groups:
        - !Ref ApplicationGroup

  OperaterPassword:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        GenerateStringKey: password
        PasswordLength: 16
        SecretStringTemplate: "{}"

  Operater:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref OperatorName
      Path: "/"
      LoginProfile:
        Password: !Sub "{{resolve:secretsmanager:${OperaterPassword}:SecretString:password::}}"
      Groups:
        - !Ref OperationGroup
